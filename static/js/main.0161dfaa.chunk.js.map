{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","index.js"],"names":["Navbar","props","className","Mode","href","title","type","id","about","textColor","onClick","toggleMode","role","htmlFor","defaultProps","TextForm","useState","text","setText","heading","rows","placeholder","value","onChange","event","target","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","Alert","alert","msg","About","App","setMode","settextColor","setalert","message","setTimeout","body","style","backgroundColor","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.0161dfaa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"/navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                {props.about}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n\r\n          <div\r\n            className={`mx-2 text-${props.textColor} form-check form-switch`}\r\n          >\r\n            <input\r\n              onClick={props.toggleMode}\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable DarkMode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n// Navbar.propTypes = {\r\n//   title : PropTypes.string,\r\n//   about: PropTypes.string\r\n// };\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Default Title\",\r\n  about: \"Default About\"\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nfunction TextForm(props) {\r\n  const handeUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted Uppercase\", \"success\");\r\n  };\r\n\r\n  const handleLwClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted LowerCase\", \"success\");\r\n  };\r\n\r\n  const handleClear = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Message Clear\", \"success\");\r\n  };\r\n\r\n  const copyText = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copy Text\", \"success\");\r\n  };\r\n  const removePuncutation = () => {\r\n    let punct = [\r\n      \"!\",\r\n      \",\",\r\n      \"@\",\r\n      \"#\",\r\n      \"$\",\r\n      \"%\",\r\n      \"^\",\r\n      \"&\",\r\n      \"&\",\r\n      \"*\",\r\n      \"(\",\r\n      \")\",\r\n      \"-\",\r\n      \"_\",\r\n      \";\",\r\n      \":\",\r\n      '\"',\r\n      \">\"\r\n    ];\r\n  };\r\n\r\n  const ChangeText = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1 className={`mb-4 text-${props.textColor}`}>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            placeholder=\"Enter Text Here\"\r\n            value={text}\r\n            onChange={ChangeText}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"my-2 mx-2 btn btn-primary\"\r\n          onClick={handeUpClick}\r\n        >\r\n          Convert To Uppercase\r\n        </button>\r\n\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"my-2 mx-2 btn btn-primary\"\r\n          onClick={handleLwClick}\r\n        >\r\n          Convert To Uppercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"my-2 mx-2 btn btn-primary\"\r\n          onClick={handleClear}\r\n        >\r\n          Clear Text\r\n        </button>\r\n        {/* <button\r\n          disabled={text.length === 0}\r\n          className=\"my-2 mx-2 btn btn-primary\"\r\n          onClick={removePuncutation}\r\n        >\r\n          Remove Puncutation\r\n        </button> */}\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"my-2 mx-2 btn btn-primary\"\r\n          onClick={copyText}\r\n        >\r\n          Copy Text\r\n        </button>\r\n      </div>\r\n      <div className=\"container\">\r\n        <h3 className={`text-${props.textColor}`}>Your text Summary</h3>\r\n        <p className={`text-${props.textColor}`}>\r\n          {text.split(\" \").length} Words. {text.length} Character\r\n        </p>\r\n        <p className={`text-${props.textColor}`}>\r\n          {0.008 * (text.split(\" \").length - 1)} Mints to read this\r\n        </p>\r\n        <h3 className={`text-${props.textColor}`}>Preview:</h3>\r\n        <p className={`text-${props.textColor}`}>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TextForm;\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong> {props.alert.msg} </strong>\r\n      </div>\r\n    )\r\n  );\r\n}\r\nexport default Alert;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return <></>;\r\n}\r\n","import \"./styles.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\n\nimport React, { useState } from \"react\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Switch from \"react-router-dom\";\nimport Route from \"react-router-dom\";\n\nfunction App() {\n  const [Mode, setMode] = useState(\"light\");\n  const [textColor, settextColor] = useState(\"dark\");\n\n  // alert state\n  const [alert, setalert] = useState(null);\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (Mode === \"light\" && textColor === \"dark\") {\n      setMode(\"dark\");\n      settextColor(\"light\");\n      document.body.style.backgroundColor = \"#325187\";\n      showAlert(\"Dark mode is enabled\", \"success\");\n    } else if (Mode === \"dark\") {\n      setMode(\"light\");\n      settextColor(\"dark\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode is enabled\", \"success\");\n    } else if (Mode === \"dark\" || Mode === \"light\") {\n      setMode(\"danger\");\n      settextColor(\"red\");\n      document.body.style.backgroundColor = \"red\";\n      showAlert(\"Red mode is enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      <Navbar\n        title=\"TextUtils\"\n        about=\"About Us\"\n        Mode={Mode}\n        toggleMode={toggleMode}\n        textColor={textColor}\n      />\n      <Alert alert={alert} />\n      <div className=\"container\">\n        <TextForm\n          showAlert={showAlert}\n          heading=\"Try Textutil Made By Sameer - Words Counter | Lowercase to uppercase | uppercase\n          to Lowercase\"\n          textColor={textColor}\n        />\n      </div>\n      <About />\n    </>\n  );\n}\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}